image: registry.gitlab.com/maketechnology/equo/docker/gradle5.4.1:adoptopenjdk8-alpine

stages:
  - build
  - test
  - release

variables:
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle-home
  gradle_opt: "--build-cache --no-daemon"

# HOME is to cwd so bnd will download to ~/.bnd and ~/.m2 with ~=HOME
cache:
  key: "gradle"
  paths:
    - .gradle-home/
    - .m2/
    - .bnd/

before_script:
  - export HOME=$CI_PROJECT_DIR

.all:
  artifacts:
    paths:
      - cnf/testbuild.bnd
      - cnf/testbundle.bnd
      - cnf/release
      - cnf/cache
      - cnf/build
      - build
      - build-cache
    expire_in: 12w

build:
  extends: .all
  stage: build
  script:
    - gradle $gradle_opt assemble

test:
  extends: .all
  stage: test
  script:
    - gradle $gradle_opt test

test.integration:
  extends: .all
  image: registry.gitlab.com/maketechpub/docker/adopt:ubuntu.jdk8.gtk3
  stage: test
  before_script:
    - Xvfb :1 -screen 0 1152x720x24+32 -ac -noreset 2> xvfb.err &
    - export DISPLAY=:1
  script:
    - ./gradlew $gradle_opt testOSGi || (kill $(pidof Xvfb) && false)
    - kill $(pidof Xvfb)

.release_steps: &release_steps
  - gradle $gradle_opt release
  - gradle $gradle_opt run.p2
  - cp p2.index cnf/release && xz -e cnf/release/artifacts.xml && xz -e cnf/release/content.xml
  - gradle $gradle_opt publish

release.develop:
  extends: .all
  stage: release
  script:
    - *release_steps
  only:
    - develop

release:
  extends: .all
  stage: release
  script:
    - echo $'\n'"deployingrelease=true" >> gradle.properties
    - *release_steps
  only:
    - master
  when: manual